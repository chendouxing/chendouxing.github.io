{
    "version": "https://jsonfeed.org/version/1",
    "title": "蟹堡王海星 • All posts by \"数据库技术\" category",
    "description": "花有重开日，人无再少年",
    "home_page_url": "https://chendouxing.github.io",
    "items": [
        {
            "id": "https://chendouxing.github.io/2023/08/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%9B%E7%BA%A7%E8%80%83%E8%AF%95/",
            "url": "https://chendouxing.github.io/2023/08/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%9B%E7%BA%A7%E8%80%83%E8%AF%95/",
            "title": "计算机四级考试",
            "date_published": "2023-08-24T06:39:06.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"数据库原理\"><a class=\"markdownIt-Anchor\" href=\"#数据库原理\">#</a> 数据库原理</h1>\n<p>分布式透明性（网络透明性）包含位置透明性和命名透明性；复制透明性使用户不知道副本的存在</p>\n<p>两阶段封锁协议保证可串行性</p>\n<p>保证事务原子性是 DBMS 的事务管理器中故障恢复机制的责任；保证事务的一致性是对该事务进行编码的应用程序员的责任；保证事务的隔离性是 DBMS 的事务管理器中并发控制部件的责任；保证事务的持久性是 DBMS 的事务管理器中故障恢复机制的责任。</p>\n<p>在分布式提交中，当一个事务更新在多个站点上的数据时，直到它确认每个站点上的事务都有结果且没有丢失时才能够提交。每个站点首先将事务执行的局部结果<strong>永久</strong>记录在本地站点磁盘的日志上。</p>\n<p>分布式系统的所有问题是<strong>内部的、实现级别的</strong></p>\n<p>分布式数据库系统中的<strong>数据分片</strong>是指<strong>对全局关系的分片</strong></p>\n<p><strong>可重构性：必须保证能够由一个全局关系的各个片段来重构该全局关系</strong></p>\n<p><strong>HTTP 协议的效率低</strong></p>\n<p>分布式计算系统不可能同时满足 CAP 原理（一致性，可用性和分区容忍性）</p>\n<p>ODMG 中对象可以用五个方面来描述：标识符、名称、生存期、结构和创建</p>\n<p>对象定义语言 ODL<strong> 独立于</strong>任何特定的编程语言（“ODL 是与 C++ 或 JAVA 等类似的一种编程语言” 该说法是错误的</p>\n<p>基本可用是指分布式系统在出现不可预知的故障时，允许损失部分可用性，但不等价于可用性不可用</p>\n<p>在主站点技术中，所有的识别副本<strong>都被保留</strong>在相同的站点上；所有的加锁和解锁请求<strong>都被传输</strong>在包含那个副本的站点上。</p>\n<p>分布式数据库系统的查询处理比集中式系统<strong>更复杂</strong>，分布式数据查询<strong>以减少传输的数据量为优化目标</strong></p>\n<p><strong>半连接操作不能交换</strong></p>\n<p>基于识别数据项副本的方法常用于<strong>分布式并发控制</strong></p>\n<p>NOSQL 的复制模型主要有主 - 从复制和主 - 主复制。主从复制模型需要一 个复制为主复制，<strong>所有的读和写操作都必须是对主复制的</strong>，然后再复制到其他的从节点。</p>\n<p><strong>一个典型的对象 - 关系数据库中的表不满足第一范式的要求</strong>。</p>\n<p>三层 B/S 体系结构分别为表示层、应用层和数据库服务器层。应用层也称为业务逻辑层。<strong>当使用 Web 界面时，表示层一般通过 HTTP 协议 与应用层进行通信</strong>。</p>\n<p>典型的大对象（<strong>位图图像和长文本串</strong>）<strong>被称为二级制大对象 BLOB</strong>，一般是非结构化的。</p>\n<p><strong>双钥加密体制中的加密秘钥和解密秘钥是不相同的</strong>。</p>\n<p>DBMS 不能直接处理基于非结构复杂对象的值的选择条件及其他操作。</p>\n<p>很多 NOSQL 系统不支持 Join（连接）操作，Join 操作需要在应用程序中实现。</p>\n<p>基于关系数据库系统的、以数据处理为主的传统的数据库应用具有以下共同特点：结构统一，面向记录，数据项小和原子字段。</p>\n<p><strong>三种最基本的构造器是：原子、结构或元组、以及汇集。</strong></p>\n<p>数据加密标准<strong> DES</strong> 的密钥长度是<strong> 56</strong> 位数字，数据高级加密标准<strong> AES</strong> 的密钥长度可以是<strong> 128、192 或 256</strong> 位数字。</p>\n<p><strong>BASE 指的是基本可用、软状态和最终一致性</strong>。</p>\n<p>很多 NOSQL 系统采用的是<strong>对对象的主码进行哈希或范围分区方法来提高访问数据的性能</strong>，NoSQL<strong> 支持无模式结构数据的存储和访问</strong>。</p>\n<p><strong>投票方法在站点间产生的信息通信量比识别副本方法产生的要高</strong>。</p>\n<p>以应用服务器为中心的软件结构是 Web 服务器和三层客户机服务器结合的成果。<strong>这种软件结构可分为四部分：客户机浏览器、Web 服务器、应用服务器、数据库服务器</strong>。</p>\n<p><strong>两阶段提交协议常用于处理分布式提交问题</strong>。</p>\n<p>常用的 B /S 结构软件开发模式:<strong> 以 Web 服务器为中心</strong>，<strong>以数据库服务器为中心</strong>和<strong>以应用服务器为中心</strong>。</p>\n<p><strong>星形性质：安全级别高的主体禁止写安全级别低的客体</strong>。</p>\n<p><strong>列存储数据库是按列存储数据</strong>的，这类系统按列将一张表分为列族 (一种<strong>垂直分片方法</strong>) , 每个列族存储在自己的文件中。</p>\n<p><strong>在投票方法中，不需要指定识别副本</strong>。</p>\n<p>主站点技术是一种识别数据项副本的并发控制方法；主站点技术中所有的识别副本都保留在同一站点上，<strong>尽管所有的锁都在主站点上存取，但数据项本身可以在它们所在的任何站点上存取</strong>，主站点技术的好处是它是集中式方案的简单扩展，因此不太复杂。</p>\n<p>关联规则，指的是同时满足最小支持度阈值和最小可信度阈值的规则。关联规则挖掘的总体性能由从项集中找出频繁项集的过程决定，常用的关联规则挖掘算法有 Aprior 算法、采样算法、分区算法等。<strong>一个频繁项集的超集可以是频繁项集，也可以不是</strong>。</p>\n<p><strong>大多数的 WEB 产品都是通过牺牲一致性来换取高可用性</strong>。</p>\n<p><strong>强一致性</strong>：对于关系型数据库，要求更新过的数据都能被后续的访问看到。</p>\n<p><strong>最终一致性</strong>：如果经过一段时间后，要求能访问到更新后的数据。</p>\n<p><strong>星形模型由一个事实表和每个维对应的维表组成</strong>。</p>\n<p><strong>SCRUD</strong> 操作分别指<strong> Search</strong>、Create、Read、Update、Delete。</p>\n<p>对于遵循维格式的数据，在<strong>多维矩阵（数据立方体）上的查询性能优于关系数据模型上的查询性能</strong>。</p>\n<p>对象查询语言 **（OQL）在设计时需要与编程语言紧密配合使用 **，<strong>OQL 语法与 SQL 的语法相似</strong>，只是增加了有关 ODMG 概念的特征。</p>\n<p>如果某个账户<strong>没有 CREATE TABLE 权限</strong>，那么这个账户就<strong>不能创建任何关系</strong>；矩阵中的每个位置<strong> M (i，j) 表示主体 i 有对象 j 的权限类型</strong> (读、写和更新)。</p>\n<p>在面向对象的程序设计语言中的对象称为<strong>临时对象</strong>，面向对象数据库永远在二级存储器中存储持久的对象。</p>\n<p>对象数据库 (ODB) 设计与关系数据库 (RDB) 设计之间最主要的区别是：</p>\n<ol>\n<li>如何处理联系；</li>\n<li>如何处理继承；</li>\n<li>在对象数据库设计中，有必要在设计时尽早指定操作。</li>\n</ol>\n<p>数字签名由一个符号串组成，<strong>签名对每个应用来说必须是不同的</strong>；<strong>公钥技术</strong>是创建此类特性的数字签名的<strong>最好办法</strong>。</p>\n<p>在多重继承的一般性规则中，只有<strong>当两个超类型中的同名函数不相同时才会发生二义性</strong>。</p>\n<p>每个对象标识符<strong> OID 只能被使用一次</strong>，OID 在对象生成时产生，<strong>在撤销对象时被注销</strong>，无法再赋予另外的对象。</p>\n<p>公钥加密模式 (或者公钥构架) 的组成部分：明文、加密算法、公钥、私钥、密文和解密算法。</p>\n<p>OLAP 服务器是位于客户与数据仓库服务器之间的一个服务器。关系 OLAP 服务器是 OLAP 服务器的一种实现，是扩充的关系型 DBMS，提供对多维数据库的支持。多维 OLAP 服务器是 OLAP 服务器的一种实现，它是一种特殊的服务器，直接支持多维数据的存储和操作。</p>\n<p><strong>NOSQL 系统常常使用水平扩展</strong>。</p>\n<p>在多维模式中，<strong>雪花模式比星形模式的数据冗余要低</strong>。</p>\n<p>数据库安全性的一般控制措施包括：<strong>访问控制</strong>、<strong>推理控制</strong>、<strong>流控制</strong>、<strong>数据加密</strong>。</p>\n<p><strong>NOSQL 数据库</strong>把文件的<strong>记录共享在多个节点</strong>上，以分担对数据的访问。</p>\n<p><strong>自主安全性机制的任务</strong>包含：</p>\n<ul>\n<li>权限授予（GRANT）</li>\n<li>权限收回（REVOKE）</li>\n<li>传播权限（GRANT OPTION）</li>\n</ul>\n<p>强制安全性机制用于对多级安全性进行控制，将用户和数据分为多个安全类别；<strong>基于角色的安全性机制是强制安全性机制的一个扩展</strong>。</p>\n<p>一般把 NOSQL 所采用的模型分为四类：键值、文档、列和图。</p>\n<p><strong>公钥加密使用两个独立的密钥</strong>。</p>\n<p><strong>CGI</strong> 作为一个独立的进程在 Web 服务器上运行，<strong>进程的创建和关闭都会严重消耗系统资源</strong>。</p>\n<p>API 与 CGI 两种编程接口均存在缺陷：</p>\n<ul>\n<li>用户界面受 HTML 语言的限制；</li>\n<li>Web 服务器负载过重；</li>\n<li>HTTP 协议的效率低。</li>\n</ul>\n<p><strong>行和数组类型构造器用于指定复杂类型，称为用户自定义类型</strong>；行类型对应于元组 (或结构) 构造器；数组类型对应指定汇集（集合）； SQL 提供了类似于类定义的构造，用户可以通过该构造创建命名的用户自定义类型。</p>\n<p><strong>统计数据库安全技术禁止对个体数据进行检索</strong>，只允许使用聚集类型的函数。</p>\n<p><strong>一个大项集 (频繁项集) 的子集必须是大项集</strong>，<strong>一个小项集</strong> (<strong>非频繁项集</strong>)<strong> 的超集是小项集</strong>。</p>\n<p>在关系授权和收回权限的<strong>自主访问控制技术，是一种 &quot;all-or-nothing&quot; 的方法</strong>，即一个用户要么拥有该特权，要么没有该特权。</p>\n<p><strong>水平扩展</strong>：增加分布式系统的节点数量；</p>\n<p><strong>垂直扩展</strong>：对系统的单个节点的能力进行扩充，比如增加存储能力和处理能力。</p>\n<h2 id=\"多选题\"><a class=\"markdownIt-Anchor\" href=\"#多选题\">#</a> 多选题</h2>\n<p>DBMS 提供模式数据定义语言（DDL）<strong>来描述逻辑模式</strong>。</p>\n<p>常用的<strong>逻辑数据模型</strong>包括基于记录的模型（<strong>层次模型、网状模型、关系模型</strong>）、<strong>面向对象模型和对象关系模型</strong>。</p>\n<p><strong>概念数据模型</strong>包括实体联系模型（E-R 模型）、扩充的实体联系模型（EER 模型）、<strong>面向对象模型</strong>、<strong>谓词模型</strong>。</p>\n<p><strong>面向对象模型可以是概念模型，也可以是逻辑模型</strong>。</p>\n<p>DBMS 还提供以下各方面数据控制功能：支持数据的多视图；支持数据共享和多用户事务处理；具有可控的冗余，<strong>提供数据库数据的安全性保护</strong>，限制非授权的访问；为程序对象提供持久性存储；提供高效查询处理的存储结构，<strong>支持高效的数据查询处理与优化</strong>；<strong>提供数据库的备份和恢复功能</strong>；<strong> 提供定义和确保数据库完整性检查</strong>；提供多用户界面；可缩短程序开发时间；<strong>并发控制</strong>。</p>\n<p><strong>数据库管理员的职责包括</strong>：<strong>确定数据库中的信息内容和结构</strong>；<strong>确定数据库的存储结构和存取策略</strong>；<strong> 定义数据的安全性要求和完整性约束</strong>；监控数据库的使用和运行；数据库的性能改进；定期对数据库进行重组或重构，以提高系统的性能。</p>\n<p><strong>关系模型是数学化模型</strong>，<strong>关系模型中数据的逻辑结构是一张二维表</strong>。</p>\n<p>模式是数据库中全体数据的逻辑结构和特征描述，仅涉及 “型”，不涉及 “值”；一个模式可以有多个实例。只指定数据库的模式，此时数据库的状态称为没有数据的空状态。数据库第一次装入或加载初始数据后的状态，称为初始状态。</p>\n<p><strong>一个数据库只有一个模式</strong>，<strong>与具体的数据模型有关</strong>，但与具体应用程序以及所使用的应用开发工具和高级程序设计语言等无关。</p>\n<p><strong>同一个外模式可以被某一用户的多个应用程序所使用，但一个应用程序只能使用一个外模式</strong>。</p>\n<p><strong>三级抽象模式是数据字典的最基本的内容</strong>。</p>\n<p><strong>数据的逻辑独立性保证数据的逻辑结构改变时，应用程序不用改变</strong>。</p>\n<p><strong>层次模型</strong>以<strong>树状结构</strong>表示各类实体以及他们之间的联系；<strong>网状模型</strong>以<strong>指针</strong>表示记录之间的联系；<strong>关系模型</strong>以<strong>二维表</strong>的形式表示实体与实体之间的联系。</p>\n<p><strong>层次模型只能直接表示 1:1 关系和 1：n 关系，多对多（m:n）关系无法直接表示，因为层次结构以树状结构来表示关系，每个节点（除根节点无双亲节点）均只有一个双亲节点，一个或多个子节点，故无法直接表示多对多关系。</strong></p>\n<p>与传统文件系统相比，<strong>数据库系统的优点是</strong>：<strong>数据冗余度小、数据整体有结构、数据共享性高、数据独立性高</strong>。</p>\n<p><strong>关系操作的方式为一次一个集合</strong>，<strong>非关系操作的方式为一次一个记录</strong>。</p>\n<p><strong>数据完整性包括实体完整性</strong>、<strong>参照完整性和用户定义完整性</strong>。</p>\n<p>为维护数据完整性，在将新元组 t 插入到关系 R 时，需要进行完整性检查，<strong>若关系</strong> R<strong> 是参照关系</strong>，<strong>则需要对被参照关系进行检查</strong>，<strong>看是否会违反参照完整性约束</strong>。</p>\n<h1 id=\"操作系统原理\"><a class=\"markdownIt-Anchor\" href=\"#操作系统原理\">#</a> 操作系统原理</h1>\n",
            "tags": [
                "计算机等级考试"
            ]
        },
        {
            "id": "https://chendouxing.github.io/2023/03/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7%E8%80%83%E8%AF%95/",
            "url": "https://chendouxing.github.io/2023/03/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7%E8%80%83%E8%AF%95/",
            "title": "计算机三级填空题",
            "date_published": "2023-03-29T01:48:10.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>IDEFO 需求建模方法由箭头和 31 矩形框两种元素构成。</p>\n<p>从安全性角度考虑，防火墙技术是用来保证数据库应用系统的 32 网络环境安全的。</p>\n<p>在 UML 的状态机图中，状态之间的转移是由 33 事件驱动的。</p>\n<p>在一个 SELECT 语句中，GROUP BY 子句的逻辑执行顺序在 ORDER BY 子句之 34 前</p>\n<p>在 T-SQL 语言中，如果要将 T1 表中的全部数据复制到 T2 表中，T2 表目前还不存在，可使用语句:</p>\n<p>SELECT * 35 INTO T2 FROM T1</p>\n<p>设有表 Student (Sno,Sname)、SC (Sno,Cno,Grade), 现要查询没选 C01 课程的学生姓名，请补全下列语句:</p>\n<p>SELECT Sname FROM Student WHERE NOT 36 EXISTS .(SELECT * FROM SC WHERE Cno = ‘C01’</p>\n<p>AND Student.Sno = SC.Sno )</p>\n<p>在 SQL Server 2008 中，若要提取游标 cur1 当前行指针所指的前一行数据，使用的选项是: FETCH 37 PRIOR FROM cur1</p>\n<p>在 SQL Server 2008 中，若要删除 U1 架构，使用的语句是：38 DROP SCHEMA U1</p>\n<p>在 SQL Server 2008 中，有两种身份验证模式，一种是混合身份验证模式，另 - 种是 39 Windows 身份验证模式。</p>\n<p>40 物化视图是包含查询结果的数据库对象，数据不是在视图使用时才读取而是预先计算的。</p>\n<p>为提高数据库性能，在销售单据表中增加 “总价” 字段 (由表中 “单价 &quot; x “数量” 计算而来) , 此种数据库优化方法被称为增加 ( 41 派生冗余列方法。</p>\n<p>在数据库动态转储机制中，一 般需要使用 ( 42 日志文件才能将数据库恢复到某 - 时刻的正确状态。</p>\n<p>分布式数据库系统的恢复控制采用的最典型策略是基于 43 两阶段的提交协议。</p>\n<p>时间序列分析也可以称为数据演变分析，它能描述行为随 44 时间变化的对象的规律或趋势，并对其进行建模。</p>\n<p>在关联规则挖掘中，关联规则的成立与否一般用 45 支持度和置信度两个指标进行描述。</p>\n<p>数据库完整性约束条件的作用对象分为列、元组和 31 关系三种级别。</p>\n<p>建立在主码属性上的索引称作 32 主索引。</p>\n<p>在 UML 图中，描述系统中硬件和软件的物理配置情况和系统体系结构的图称为 33 部署图。</p>\n<p>在一个 SELECT 语句中，HAVING 子句的逻辑执行顺序在 WHERE 子句之 34 后。</p>\n<p>在 T-SQL 语言中，如果要将 T1 表中的全部数据复制到 T2 表中，T2 表已存在，可使用语句: .</p>\n<p>35 INSERT INTO T2 SELECT * FROM T1</p>\n<p>在 SQL Server 2008 中，设要在销售表上定义一个更新操作的后触发器。请补全下列语句: .</p>\n<p>CREATE TRIGGER tri sales ON 销售表 36 FOR  UPDATE … …</p>\n<p>在 SQL Server 2008 中，判断游标提取状态的全局变量是 37 @@FETCH_ STATUS</p>\n<p>在 SQL Server 2008 中，若要将 DB1 数据库完整备份到 BK 设备上，请补全下列语句:</p>\n<p>38 BACKUP DATABASE DB1 TO BK .</p>\n<p>在 SQL Server 2008 中，系统管理员角色是 39 sysadmin</p>\n<p>在对表进行 40 垂直分割后，如果需要查询原表的全部数据，需要使用 join 操作。</p>\n<p>将经常一 起使用的多个表中的数据行按照其公共列值存储在一 起，这种表存储方法为 41 聚集</p>\n<p>在 SQL Server 2008 中， 使用 T-SQL 语句进行数据库备份操作， 需要使用 42 DIFFERENTIAL 关键词指定该备份为差异备份。</p>\n<p>在分布式数据库中，将某一关系从行 (元组) 的角度依据定条件划分为不同的片断，这种分片方法称为 43 水平分片法。</p>\n<p>在数据仓库中，元数据 - 般分成技术元数据和业务元数据。</p>\n<p>在数据仓库的导出数据或物化视图 (实视图) 的维护策略中，只在用户查询时发现数据已经过期才进行更新的策略称为延时维护策略。</p>\n<p>如果数据文件中的每个查找码值在索引文件中都对应一个索引记录，则称该索引为 31 稠密索引。</p>\n<p>在三层浏览器 / 服务器体系结构的数据库应用系统中，触发器是在数据库服务器上执行的。</p>\n<p>UML 图中，用于表达系统中不同的包、命名空间或不同的项目间彼此关系的图称为 33 包图。</p>\n<p>在 SELECT 语句中，用于进行分组的子句是 34 GROUP BY</p>\n<p>SQL Server 2008 提供了 4 个排名函数，其中 ( 35 RANK 函数返回结果集中每行数据在每个分区内的排名，并且每个分区内的排名从 1 开始，但排名中间数值可能有间断。</p>\n<p>在数据库调优过程中，在 &quot; 销售单据明细表” 中将” 单价 * 数量” 计算结果保存到” 总价” 列中，以减少查询过程中的计算量，此种调优方法被称为增加 40 冗余方法。</p>\n<p>在数据库恢复过程中，检查点技术大幅度减少了数据库恢复时执行的 42 日志恢复操作数量。</p>\n<p>分布式数据库中，位置独立性、数据分片独立性和数据复制独立性形成了分布式数据库系统中的 43 分布透明性。</p>\n<p>在 SQL Server 2008 的 LIKE 子句中，可以匹配 0 到多个字符的通配符是 34 %</p>\n<p>SQL Server 2008 提供了 4 个排名函数，其中 35 DENSE _RANK 函数返回结果集中每行数据在每个分区内的排名，并且每个分区内行的排名从 1 开始，排名可重复不间断。</p>\n<p>在数据库调优过程中，在 “学生信息表” 中增加 “所在系名”，以减少查询过程中的表连接次数，此种调优方法被称为增加 40 冗余列方法。</p>\n<p>在各种并行数据库系统结构中， 43 层次结构综合了共享内存、共享磁盘和无共享结构的特点，将结构分成顶层和底层两层，顶层是无共享结构，底层是共享内存或共享磁盘结构。</p>\n<p>设在 SQL Server 2008 中， 要在 T1 表的 C1 列上建立一个按降序排序的非聚集索引。请补全下列语句:</p>\n<p>CREATE INDEX idx t1 ON T1( 38 C1 DESC)</p>\n<p>在 SQL Server 2008 中，若要删除 U1 登录账户，请补全下列语句:</p>\n<p>DROP 39 LOGIN U1</p>\n<p>在数据仓库环境中，数据的 44 粒度设计是一 种重要的设计问题， 它会影响到数据仓库中数据量以及系统能回答的查询的类型。</p>\n<p>在企业数据仓库架构中，操作型数据存储 ODS - 般情况下主要用来支持即时 OLAP 和全局型 45 OLTP 两类应用。</p>\n<p>在三层浏览器 / 服务器体系结构的数据库应用系统中，Web 浏览器实现的是 32 表示层的功能。</p>\n<p>用于描述系统、用例和程序模块中逻辑流程执行次序的 UML 图称为 33 活动图。</p>\n<p>在数据库并发控制中，锁的粒度越 41 大，事务并发执行程度就越小，数据库系统开销也越小。</p>\n<p>在 SQL Server 2008 中，数据库镜像分为高 42 可用操作模式、高保护操作模式和高性能操作模式。</p>\n<p>在数据仓库环境中，关于 44 数据的数据被称为元数据。</p>\n<p>答疑: [解析] 如果数据文件中的每个查找码值在索引文件中都对应一个索引记录，则该索引称为稠密索引；如果只是一部分查找码的值有对应的索引记录， 则该索引称为稀疏索引</p>\n<p>定义架构的 SQL 语句为 CREATE SCHEMA, 其语法格式为 CREATE SCHEMA [&lt;架构名&gt;] AUTHORIZATION &lt; 用户名 &gt;。</p>\n<p>设在 SQL Server 中， 要启用被禁用的 User1 登录账户。请补全下列语句:</p>\n<p>39 ALTER LOGIN User1 ENABLE</p>\n<p>某超市管理系统运行过程中出现异常，导致已经提交的事务对数据库的更新结果未能正确写入磁盘，此故障破坏了事务的 40 一致性。</p>\n<p>在 UML 中，用于描述系统内对象之间的消息发送和接收序列的称为 33 顺序图。</p>\n<p>当数据库系统中存在死锁时，通常的解决方案是选择 - 个或几个死锁事务，40 回滚这些事务。</p>\n<p>分布式数据库是物理上分散、逻辑上 43 集中的数据库系统。</p>\n<p>如果数据文件中数据记录的排列顺序和索引文件中对应索引码的排列顺序 - 致，则称这种索引为 32 聚集索引。</p>\n<p>为经常作为查询条件的列建立 41 索引的调优方法是典型的以空间换时间的调优方法。</p>\n<p>在分布式数据库查询中，导致数据传输量大的主要原因是数据间的连接操作和 43 并操作。</p>\n<p>图主要用于表达问题领域的概念模型，类图中除了表达抽象概念的名称外，还需要表达抽象概念的属性和 33 方法。</p>\n<p>某系统运行过程中异常，已提交事务所影响的数据未能正确写入磁盘且无法恢复，此故障破坏了事务的 40 持久性。</p>\n<p>数据仓库与大数据平台的前端需要有 ETL 工具，其中的 E 是指 45 抽取.</p>\n<p>在事务概要设计中，用 31 read 原语来表示应用层的 Select 操作。</p>\n<p>UML 中的通信图显示的是系统内对象之间的 33 关系， 并不强调交互的顺序。</p>\n<p>执行存储过程需要使用 exec 或 execute 关键词。</p>\n<p>RETURNS 关键词后面是 TABLE</p>\n<p>在 SQL Server 2008 中，用户定义的角色属于 39 数据库级别的角色。</p>\n<p>SQL Server 2008 支持的备份类型包括数据库备份、42 文件备份以及 事务日志备份几种方式。</p>\n<p>分片透明性是最高级别的透明性，位于全局概念模式与 43 分片模式之间。</p>\n<p>DBAS 生命周期中，规划与分析的主要工作内容包括系统规划与定义、项目规划和 31 可行性分析</p>\n<p>在 UML 中，包图是用来表示包与包之间的关系的 33 类图。</p>\n<p><strong>新</strong></p>\n<p>使用约束可以保证数据库中数据的正确性，其中 38 UNIQUE 约束允许出现空值但不允许出现重复值。</p>\n<p>在 SQL Server 2008 中，设 log1 是 SQL Server 身份验证模式的数据库服务器登录帐户。现要授予 log 1 具有创建数据库的权限，请补全下列语句:</p>\n<p>EXEC sp_ addsrvrolemember ‘log1’,'dbcreator</p>\n<p>设用 UML 设计某数据库应用系统，设计人员规划了一组应用程序集，该集合由动态链接库和可执行程序构成。为了展现这些应用程序集间的组织和依赖关系，以对源代码、可</p>\n<p>执行程序的发布等进行系统建模，应采用的 UML 图是 ( 33 组件图。</p>\n<p>在 SQL Server 2008 中，计算两个日期之差的函数是 (36 datediff ()。</p>\n<p>在 SQL Server 2008 中，能够出现在 SELECT 语句目标列中的用户自定义函数是 35 标量函数。</p>\n<p>在分布式数据库中，使用 32 分配模式来描述各片段到物理存放场地的映像。</p>\n<p>在 UML 中，33 聚集是一种特殊形式的关联，它表示类之间的关系是整体与部分的关系。</p>\n<p>在衡量数据库应用系统的性能指标中，( 34 系统吞吐量指的是系统在单位时间内可以完成的数据库事务数量。</p>\n<p>在并行数据库中，最适合整表扫描操作的数据划分方法是 36 轮转法</p>\n<p>Google 的云数据库是一个分布式的结构化数据存储系统，称作 38 Big table</p>\n<p>在数据库事务概要设计阶段，使用 read 和 write 原语来表达存取操作。</p>\n<p>数据库在运行过程中，由于突然停电等情况，导致系统停止运行的故障称为系统故障。</p>\n<p>分布式数据库系统由局部数据库管理系统、全局数据库管理系统、全局数据字典、通信管理四部分组成。</p>\n<p>在数据库性能优化中，建立物化视图和聚集 (Cluster) 属于存储优化方法。</p>\n<p>数据库维护过程中，管理员应定期对数据库进行重组，即对数据库进行整理回收碎块，重新安排数据的存储，重建索引等操作。</p>\n<p>局部数据模型透明性处于分配模式与局部概念模式之间，它使用户在编写应用程序时不但要了解全局数据的分片情况，还要了解各片段的副本复制情况及各片段和它们副本的场地位置分配情况，但是不需要了解各场地上数据库的数据模型。</p>\n<p>在分布式数据库的数据分配中，若全局数据存在多个副本，在每个物理场地中都保存一个完整的数据副本，本策略属于全复制式。</p>\n<p>在 UML 提供的图中，活动图主要用于描述系统、用例和程序模块中逻辑流程的先后或并行执行次序。</p>\n<p>在数据库操作过程中，因发生了违反完整性约束而导致事务中止的故障属于非预期的事务内部故障。</p>\n<p>在 SQL Server 2008 中，请补全下列声明游标 MyYB 的语句：DECLARE MyYB cursor FOR SELECT * FROM T1</p>\n<p>在 SQL Server 2008 中，事务日志备份仅可用在完整恢复模式和大容量日志恢复模式中。</p>\n<p>从安全性角度考虑，防火墙技术是用来保证数据库应用系统的网络环境安全的。</p>\n<p>在 SQL Server 2008 中，若要提取游标 cur1 当前行指针所指的前一行数据，使用的选项是: FETCH PRIOR FROM cur1</p>\n<p>在关联规则挖掘中，关联规则的成立与否一般用支持度和置信度两个指标进行描述。</p>\n<p>在 UML 图中，描述系统中硬件和软件的物理配置情况和系统体系结构的图称为部署图。</p>\n<p>将经常一起使用的多个表中的数据行按照其公共列值存储在一起，这种表存储方法为聚集。</p>\n<p>在 SQL Server 2008 中，使用 T SQL 语句进行数据库备份操作，需要使用 DIFFERENTIAL 关键词指定该备份为差异备份。</p>\n<p>在数据仓库的导出数据或物化视图 (实视图) 的维护策略中，只在用户查询时发现数据已经过期才进行更新的策略称延时维护策略。</p>\n<p>SQL Server 2008 提供了 4 个排名函数，其中 RANK 函数返回结果集中每行数据在每个分区内的排名，組每个分区内的排名从 1 开始，但排名中间数值可能有间断。</p>\n<p>SQL Server 2008 提供了 4 个排名函数，其中 DENSE _RANK 函数返回结果集中每行数据在每个分区内的排名，并且每个分区内行的排名从 1 开始，排名可重复且不间断。</p>\n<p>在数据库恢复过程中，检查点技术大幅度减少了数据库恢复时执行的日志恢复操作数量。</p>\n<p>分布式数据库中，位置独立性、数据分片独立性和数据复制独立性形成了分布式数据库系统中的分布透明性。</p>\n<p>对一个数据集的数据进行分组，使得每一组内的数据尽可能相似而不同组间的数据尽可能的不同，这样数据挖掘方法称为聚类算法。</p>\n<p>SQL Server 2008 中有 3 种类型的事务日志备份，对可能损坏的数据库进行日志备份的方式是尾部日志备份。</p>\n<p>在数据仓库环境中，数据的粒度设计是一 种重 要的设计问题，它会影响到数据仓库中数据量以及系统能回答的查询的类型。</p>\n<p>在 SQL Server 2008 中，数据库镜像分为高可用操作模式、高保护操作模式和高性能操作模式。</p>\n<p>并行数据库有多种体系结构，其中所有处理机通过网络共享 - 个公共的主存储器的结构称为 共享内存结构。</p>\n",
            "tags": [
                "计算机等级考试"
            ]
        }
    ]
}