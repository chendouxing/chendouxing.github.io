<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>蟹堡王海星 • Posts by &#34;数据库技术&#34; category</title>
        <link>https://chendouxing.github.io</link>
        <description>花有重开日，人无再少年</description>
        <language>zh-CN</language>
        <pubDate>Thu, 24 Aug 2023 14:39:06 +0800</pubDate>
        <lastBuildDate>Thu, 24 Aug 2023 14:39:06 +0800</lastBuildDate>
        <category>语言</category>
        <category>SQL</category>
        <category>分布式</category>
        <category>方法</category>
        <category>论文</category>
        <category>计算机等级考试</category>
        <category>数学</category>
        <category>课堂学习</category>
        <item>
            <guid isPermalink="true">https://chendouxing.github.io/2023/08/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%9B%E7%BA%A7%E8%80%83%E8%AF%95/</guid>
            <title>计算机四级考试</title>
            <link>https://chendouxing.github.io/2023/08/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%9B%E7%BA%A7%E8%80%83%E8%AF%95/</link>
            <category>计算机等级考试</category>
            <pubDate>Thu, 24 Aug 2023 14:39:06 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;数据库原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库原理&#34;&gt;#&lt;/a&gt; 数据库原理&lt;/h1&gt;
&lt;p&gt;分布式透明性（网络透明性）包含位置透明性和命名透明性；复制透明性使用户不知道副本的存在&lt;/p&gt;
&lt;p&gt;两阶段封锁协议保证可串行性&lt;/p&gt;
&lt;p&gt;保证事务原子性是 DBMS 的事务管理器中故障恢复机制的责任；保证事务的一致性是对该事务进行编码的应用程序员的责任；保证事务的隔离性是 DBMS 的事务管理器中并发控制部件的责任；保证事务的持久性是 DBMS 的事务管理器中故障恢复机制的责任。&lt;/p&gt;
&lt;p&gt;在分布式提交中，当一个事务更新在多个站点上的数据时，直到它确认每个站点上的事务都有结果且没有丢失时才能够提交。每个站点首先将事务执行的局部结果&lt;strong&gt;永久&lt;/strong&gt;记录在本地站点磁盘的日志上。&lt;/p&gt;
&lt;p&gt;分布式系统的所有问题是&lt;strong&gt;内部的、实现级别的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分布式数据库系统中的&lt;strong&gt;数据分片&lt;/strong&gt;是指&lt;strong&gt;对全局关系的分片&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可重构性：必须保证能够由一个全局关系的各个片段来重构该全局关系&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP 协议的效率低&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分布式计算系统不可能同时满足 CAP 原理（一致性，可用性和分区容忍性）&lt;/p&gt;
&lt;p&gt;ODMG 中对象可以用五个方面来描述：标识符、名称、生存期、结构和创建&lt;/p&gt;
&lt;p&gt;对象定义语言 ODL&lt;strong&gt; 独立于&lt;/strong&gt;任何特定的编程语言（“ODL 是与 C++ 或 JAVA 等类似的一种编程语言” 该说法是错误的&lt;/p&gt;
&lt;p&gt;基本可用是指分布式系统在出现不可预知的故障时，允许损失部分可用性，但不等价于可用性不可用&lt;/p&gt;
&lt;p&gt;在主站点技术中，所有的识别副本&lt;strong&gt;都被保留&lt;/strong&gt;在相同的站点上；所有的加锁和解锁请求&lt;strong&gt;都被传输&lt;/strong&gt;在包含那个副本的站点上。&lt;/p&gt;
&lt;p&gt;分布式数据库系统的查询处理比集中式系统&lt;strong&gt;更复杂&lt;/strong&gt;，分布式数据查询&lt;strong&gt;以减少传输的数据量为优化目标&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;半连接操作不能交换&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于识别数据项副本的方法常用于&lt;strong&gt;分布式并发控制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NOSQL 的复制模型主要有主 - 从复制和主 - 主复制。主从复制模型需要一 个复制为主复制，&lt;strong&gt;所有的读和写操作都必须是对主复制的&lt;/strong&gt;，然后再复制到其他的从节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个典型的对象 - 关系数据库中的表不满足第一范式的要求&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;三层 B/S 体系结构分别为表示层、应用层和数据库服务器层。应用层也称为业务逻辑层。&lt;strong&gt;当使用 Web 界面时，表示层一般通过 HTTP 协议 与应用层进行通信&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;典型的大对象（&lt;strong&gt;位图图像和长文本串&lt;/strong&gt;）&lt;strong&gt;被称为二级制大对象 BLOB&lt;/strong&gt;，一般是非结构化的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;双钥加密体制中的加密秘钥和解密秘钥是不相同的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;DBMS 不能直接处理基于非结构复杂对象的值的选择条件及其他操作。&lt;/p&gt;
&lt;p&gt;很多 NOSQL 系统不支持 Join（连接）操作，Join 操作需要在应用程序中实现。&lt;/p&gt;
&lt;p&gt;基于关系数据库系统的、以数据处理为主的传统的数据库应用具有以下共同特点：结构统一，面向记录，数据项小和原子字段。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三种最基本的构造器是：原子、结构或元组、以及汇集。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据加密标准&lt;strong&gt; DES&lt;/strong&gt; 的密钥长度是&lt;strong&gt; 56&lt;/strong&gt; 位数字，数据高级加密标准&lt;strong&gt; AES&lt;/strong&gt; 的密钥长度可以是&lt;strong&gt; 128、192 或 256&lt;/strong&gt; 位数字。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BASE 指的是基本可用、软状态和最终一致性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;很多 NOSQL 系统采用的是&lt;strong&gt;对对象的主码进行哈希或范围分区方法来提高访问数据的性能&lt;/strong&gt;，NoSQL&lt;strong&gt; 支持无模式结构数据的存储和访问&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;投票方法在站点间产生的信息通信量比识别副本方法产生的要高&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;以应用服务器为中心的软件结构是 Web 服务器和三层客户机服务器结合的成果。&lt;strong&gt;这种软件结构可分为四部分：客户机浏览器、Web 服务器、应用服务器、数据库服务器&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;两阶段提交协议常用于处理分布式提交问题&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;常用的 B /S 结构软件开发模式:&lt;strong&gt; 以 Web 服务器为中心&lt;/strong&gt;，&lt;strong&gt;以数据库服务器为中心&lt;/strong&gt;和&lt;strong&gt;以应用服务器为中心&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;星形性质：安全级别高的主体禁止写安全级别低的客体&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;列存储数据库是按列存储数据&lt;/strong&gt;的，这类系统按列将一张表分为列族 (一种&lt;strong&gt;垂直分片方法&lt;/strong&gt;) , 每个列族存储在自己的文件中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在投票方法中，不需要指定识别副本&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;主站点技术是一种识别数据项副本的并发控制方法；主站点技术中所有的识别副本都保留在同一站点上，&lt;strong&gt;尽管所有的锁都在主站点上存取，但数据项本身可以在它们所在的任何站点上存取&lt;/strong&gt;，主站点技术的好处是它是集中式方案的简单扩展，因此不太复杂。&lt;/p&gt;
&lt;p&gt;关联规则，指的是同时满足最小支持度阈值和最小可信度阈值的规则。关联规则挖掘的总体性能由从项集中找出频繁项集的过程决定，常用的关联规则挖掘算法有 Aprior 算法、采样算法、分区算法等。&lt;strong&gt;一个频繁项集的超集可以是频繁项集，也可以不是&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;大多数的 WEB 产品都是通过牺牲一致性来换取高可用性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;强一致性&lt;/strong&gt;：对于关系型数据库，要求更新过的数据都能被后续的访问看到。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最终一致性&lt;/strong&gt;：如果经过一段时间后，要求能访问到更新后的数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;星形模型由一个事实表和每个维对应的维表组成&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SCRUD&lt;/strong&gt; 操作分别指&lt;strong&gt; Search&lt;/strong&gt;、Create、Read、Update、Delete。&lt;/p&gt;
&lt;p&gt;对于遵循维格式的数据，在&lt;strong&gt;多维矩阵（数据立方体）上的查询性能优于关系数据模型上的查询性能&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对象查询语言 **（OQL）在设计时需要与编程语言紧密配合使用 **，&lt;strong&gt;OQL 语法与 SQL 的语法相似&lt;/strong&gt;，只是增加了有关 ODMG 概念的特征。&lt;/p&gt;
&lt;p&gt;如果某个账户&lt;strong&gt;没有 CREATE TABLE 权限&lt;/strong&gt;，那么这个账户就&lt;strong&gt;不能创建任何关系&lt;/strong&gt;；矩阵中的每个位置&lt;strong&gt; M (i，j) 表示主体 i 有对象 j 的权限类型&lt;/strong&gt; (读、写和更新)。&lt;/p&gt;
&lt;p&gt;在面向对象的程序设计语言中的对象称为&lt;strong&gt;临时对象&lt;/strong&gt;，面向对象数据库永远在二级存储器中存储持久的对象。&lt;/p&gt;
&lt;p&gt;对象数据库 (ODB) 设计与关系数据库 (RDB) 设计之间最主要的区别是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何处理联系；&lt;/li&gt;
&lt;li&gt;如何处理继承；&lt;/li&gt;
&lt;li&gt;在对象数据库设计中，有必要在设计时尽早指定操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数字签名由一个符号串组成，&lt;strong&gt;签名对每个应用来说必须是不同的&lt;/strong&gt;；&lt;strong&gt;公钥技术&lt;/strong&gt;是创建此类特性的数字签名的&lt;strong&gt;最好办法&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在多重继承的一般性规则中，只有&lt;strong&gt;当两个超类型中的同名函数不相同时才会发生二义性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;每个对象标识符&lt;strong&gt; OID 只能被使用一次&lt;/strong&gt;，OID 在对象生成时产生，&lt;strong&gt;在撤销对象时被注销&lt;/strong&gt;，无法再赋予另外的对象。&lt;/p&gt;
&lt;p&gt;公钥加密模式 (或者公钥构架) 的组成部分：明文、加密算法、公钥、私钥、密文和解密算法。&lt;/p&gt;
&lt;p&gt;OLAP 服务器是位于客户与数据仓库服务器之间的一个服务器。关系 OLAP 服务器是 OLAP 服务器的一种实现，是扩充的关系型 DBMS，提供对多维数据库的支持。多维 OLAP 服务器是 OLAP 服务器的一种实现，它是一种特殊的服务器，直接支持多维数据的存储和操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOSQL 系统常常使用水平扩展&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在多维模式中，&lt;strong&gt;雪花模式比星形模式的数据冗余要低&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;数据库安全性的一般控制措施包括：&lt;strong&gt;访问控制&lt;/strong&gt;、&lt;strong&gt;推理控制&lt;/strong&gt;、&lt;strong&gt;流控制&lt;/strong&gt;、&lt;strong&gt;数据加密&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOSQL 数据库&lt;/strong&gt;把文件的&lt;strong&gt;记录共享在多个节点&lt;/strong&gt;上，以分担对数据的访问。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自主安全性机制的任务&lt;/strong&gt;包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;权限授予（GRANT）&lt;/li&gt;
&lt;li&gt;权限收回（REVOKE）&lt;/li&gt;
&lt;li&gt;传播权限（GRANT OPTION）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;强制安全性机制用于对多级安全性进行控制，将用户和数据分为多个安全类别；&lt;strong&gt;基于角色的安全性机制是强制安全性机制的一个扩展&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;一般把 NOSQL 所采用的模型分为四类：键值、文档、列和图。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;公钥加密使用两个独立的密钥&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CGI&lt;/strong&gt; 作为一个独立的进程在 Web 服务器上运行，&lt;strong&gt;进程的创建和关闭都会严重消耗系统资源&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;API 与 CGI 两种编程接口均存在缺陷：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户界面受 HTML 语言的限制；&lt;/li&gt;
&lt;li&gt;Web 服务器负载过重；&lt;/li&gt;
&lt;li&gt;HTTP 协议的效率低。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;行和数组类型构造器用于指定复杂类型，称为用户自定义类型&lt;/strong&gt;；行类型对应于元组 (或结构) 构造器；数组类型对应指定汇集（集合）； SQL 提供了类似于类定义的构造，用户可以通过该构造创建命名的用户自定义类型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;统计数据库安全技术禁止对个体数据进行检索&lt;/strong&gt;，只允许使用聚集类型的函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个大项集 (频繁项集) 的子集必须是大项集&lt;/strong&gt;，&lt;strong&gt;一个小项集&lt;/strong&gt; (&lt;strong&gt;非频繁项集&lt;/strong&gt;)&lt;strong&gt; 的超集是小项集&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在关系授权和收回权限的&lt;strong&gt;自主访问控制技术，是一种 &amp;quot;all-or-nothing&amp;quot; 的方法&lt;/strong&gt;，即一个用户要么拥有该特权，要么没有该特权。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;水平扩展&lt;/strong&gt;：增加分布式系统的节点数量；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;垂直扩展&lt;/strong&gt;：对系统的单个节点的能力进行扩充，比如增加存储能力和处理能力。&lt;/p&gt;
&lt;h2 id=&#34;多选题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多选题&#34;&gt;#&lt;/a&gt; 多选题&lt;/h2&gt;
&lt;p&gt;DBMS 提供模式数据定义语言（DDL）&lt;strong&gt;来描述逻辑模式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;常用的&lt;strong&gt;逻辑数据模型&lt;/strong&gt;包括基于记录的模型（&lt;strong&gt;层次模型、网状模型、关系模型&lt;/strong&gt;）、&lt;strong&gt;面向对象模型和对象关系模型&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;概念数据模型&lt;/strong&gt;包括实体联系模型（E-R 模型）、扩充的实体联系模型（EER 模型）、&lt;strong&gt;面向对象模型&lt;/strong&gt;、&lt;strong&gt;谓词模型&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面向对象模型可以是概念模型，也可以是逻辑模型&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;DBMS 还提供以下各方面数据控制功能：支持数据的多视图；支持数据共享和多用户事务处理；具有可控的冗余，&lt;strong&gt;提供数据库数据的安全性保护&lt;/strong&gt;，限制非授权的访问；为程序对象提供持久性存储；提供高效查询处理的存储结构，&lt;strong&gt;支持高效的数据查询处理与优化&lt;/strong&gt;；&lt;strong&gt;提供数据库的备份和恢复功能&lt;/strong&gt;；&lt;strong&gt; 提供定义和确保数据库完整性检查&lt;/strong&gt;；提供多用户界面；可缩短程序开发时间；&lt;strong&gt;并发控制&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库管理员的职责包括&lt;/strong&gt;：&lt;strong&gt;确定数据库中的信息内容和结构&lt;/strong&gt;；&lt;strong&gt;确定数据库的存储结构和存取策略&lt;/strong&gt;；&lt;strong&gt; 定义数据的安全性要求和完整性约束&lt;/strong&gt;；监控数据库的使用和运行；数据库的性能改进；定期对数据库进行重组或重构，以提高系统的性能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关系模型是数学化模型&lt;/strong&gt;，&lt;strong&gt;关系模型中数据的逻辑结构是一张二维表&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;模式是数据库中全体数据的逻辑结构和特征描述，仅涉及 “型”，不涉及 “值”；一个模式可以有多个实例。只指定数据库的模式，此时数据库的状态称为没有数据的空状态。数据库第一次装入或加载初始数据后的状态，称为初始状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个数据库只有一个模式&lt;/strong&gt;，&lt;strong&gt;与具体的数据模型有关&lt;/strong&gt;，但与具体应用程序以及所使用的应用开发工具和高级程序设计语言等无关。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同一个外模式可以被某一用户的多个应用程序所使用，但一个应用程序只能使用一个外模式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三级抽象模式是数据字典的最基本的内容&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据的逻辑独立性保证数据的逻辑结构改变时，应用程序不用改变&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;层次模型&lt;/strong&gt;以&lt;strong&gt;树状结构&lt;/strong&gt;表示各类实体以及他们之间的联系；&lt;strong&gt;网状模型&lt;/strong&gt;以&lt;strong&gt;指针&lt;/strong&gt;表示记录之间的联系；&lt;strong&gt;关系模型&lt;/strong&gt;以&lt;strong&gt;二维表&lt;/strong&gt;的形式表示实体与实体之间的联系。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;层次模型只能直接表示 1:1 关系和 1：n 关系，多对多（m:n）关系无法直接表示，因为层次结构以树状结构来表示关系，每个节点（除根节点无双亲节点）均只有一个双亲节点，一个或多个子节点，故无法直接表示多对多关系。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;与传统文件系统相比，&lt;strong&gt;数据库系统的优点是&lt;/strong&gt;：&lt;strong&gt;数据冗余度小、数据整体有结构、数据共享性高、数据独立性高&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关系操作的方式为一次一个集合&lt;/strong&gt;，&lt;strong&gt;非关系操作的方式为一次一个记录&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据完整性包括实体完整性&lt;/strong&gt;、&lt;strong&gt;参照完整性和用户定义完整性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;为维护数据完整性，在将新元组 t 插入到关系 R 时，需要进行完整性检查，&lt;strong&gt;若关系&lt;/strong&gt; R&lt;strong&gt; 是参照关系&lt;/strong&gt;，&lt;strong&gt;则需要对被参照关系进行检查&lt;/strong&gt;，&lt;strong&gt;看是否会违反参照完整性约束&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;关系操作通过关系语言实现，关系语言的特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高度非过程化&lt;/strong&gt;。关系操作的特点是集合操作方式，即操作的对象和操作的结果都是集合；&lt;strong&gt;非过程化是指&lt;/strong&gt;:&lt;strong&gt; 用户不必请求&lt;/strong&gt; DBA&lt;strong&gt; 为它建立特殊的存取路径&lt;/strong&gt;，&lt;strong&gt;存取路径的选择由&lt;/strong&gt; DBMS&lt;strong&gt; 的优化机制来完成&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户不必求助于循环和递归来完成数据的重复的操作&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个关系对应一个二维表，&lt;strong&gt;每个关系仅有一种关系模式&lt;/strong&gt;，&lt;strong&gt;并非任何一张二维表都可以表示一个关系&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在关系数据模型中，用单一的二维表结构来表示实体与实体之间的联系。&lt;strong&gt;二维表的一行称为一个元组&lt;/strong&gt;，&lt;strong&gt;超码的子集不是码&lt;/strong&gt;，一个关系的外码不一定是该关系的一个码，但一定是另一个关系的主码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;外码可以取空值&lt;/strong&gt;，还可以等于主码值。&lt;/p&gt;
&lt;p&gt;外部并是为了用于从两个&lt;strong&gt;不&lt;/strong&gt;满足相容条件的关系得到它们元组的并集而开发的，两个关系 R 和 S 的半连接具有对称性&lt;strong&gt;不等价于&lt;/strong&gt; R 和 S 的半连接与 S 和 R 的半连接等价。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;并&lt;/strong&gt;、&lt;strong&gt;差&lt;/strong&gt;、&lt;strong&gt;笛卡儿积&lt;/strong&gt;、&lt;strong&gt;投影和选择这五种操作称为基本的关系代数操作&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户定义完整性约束&lt;/strong&gt;反映的是某一具体应用所涉及的数据必须满足的&lt;strong&gt;语义要求&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果两个关系没有公共属性，那么他们的自然连接就变为笛卡尔积。&lt;/p&gt;
&lt;p&gt;关系的形式定义指从数学的观点定义关系，有两种定义方法：&lt;strong&gt;用集合论的观点定义关系&lt;/strong&gt;；&lt;strong&gt;用值域来定义关系&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对关系的描述称为关系模式。&lt;strong&gt;一般来说&lt;/strong&gt;，&lt;strong&gt;每个关系至少有一个默认的超码或超键&lt;/strong&gt;，即&lt;strong&gt;该关系的所有属性的集合，也是这个关系的最大超码或超键&lt;/strong&gt;。&lt;strong&gt;一个关系的候选码或候选键是这个关系的最小超码或超键&lt;/strong&gt;。&lt;strong&gt;关系中包含在任何一个候选码中的属性称为主属性或码属性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;实体完整性规则是指关系中的元组在组成主键的属性上不能为空；&lt;strong&gt;实体完整性约束是对关系的约束&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;参照完整性是定义建立关系之间联系的主关键字与外部关键字引用的约束条件。&lt;/p&gt;
&lt;p&gt;用户自定义完整性约束由用户根据用户需要定义，它反映某一具体应用所涉及的数据必须满足的语义要求，主要是对属性的取值进行限定，所以主要是域完整性约束。&lt;/p&gt;
&lt;p&gt;域完整性约束，是对属性的值域的约束，是指对关系中属性取值的正确性限制：包括数据类型、精度、取值范围、是否允许空值、是否有默认值等。域完整性约束是对属性的值域的约束，是指对关系中属性取值的正确性限制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;外码可以为空值&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关系操作是一次一个集合。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每个关系必须有主码&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;超码指关系中移除某个属性，但它仍然是这个关系的码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全码指所有属性共同构成的一个候选码&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;扩充的关系操作，这类操作主要有广义连接、赋值、外连接、半连接、聚集、外部并等。广义投影是对投影的扩展。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自然连接是一种特殊的等值连接&lt;/strong&gt;，&lt;strong&gt;除操作要求参加运算的关系必须出自相同的域集&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;投影不仅消去原关系中的某些列，&lt;strong&gt;而且也可能消除原关系中的元组&lt;/strong&gt;，因为消去了某些属性列后，就可能出现重复行，应消去这些完全相同的行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;聚集操作不是一种能够用基本关系代数操作表示的请求类型操作&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;两个关系如果满足相容性条件则这两个关系具有相同的属性个数，并且每对相对应的属性都具有相同的域。&lt;/p&gt;
&lt;p&gt;一般情况下，当对关系 R 和 S 使用&lt;strong&gt;自然连接&lt;/strong&gt;时，要求 R 和 S 含有&lt;strong&gt;一个或多个共有的属性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;外连接分为左外连接、右外连接和全外连接。&lt;/p&gt;
&lt;p&gt;预定义数据类型包括数值型、字符串型、位串型、时间型和布尔型。&lt;/p&gt;
&lt;p&gt;数据定义语言（DDL）：用来创建数据库的各种对象，包括数据库模式、表、视图、索引、域、触发器、自定义类型等。&lt;/p&gt;
&lt;p&gt;视图是关系数据库系统提供给用户以多种角度观察数据库中数据的重要机制。&lt;strong&gt;基本表中的数据发生变化&lt;/strong&gt;，&lt;strong&gt;从视图中查询得出的数据也就随之改变&lt;/strong&gt;。组成视图的属性列必须依照上面的原则，或者全部省略或者全部指定。&lt;strong&gt;把对视图的查询转换为对基本表的查询的过程称为视图的消解&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;嵌入式 SQL 与主语言之间的通信方式有 SQL 通信区、主变量和游标。&lt;/p&gt;
&lt;p&gt;存储文件的逻辑结构组成了 SQL 数据库的内模式，存储文件的物理结构对用户是透明的，由操作系统来管理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当视图对应的基本表被删除时&lt;/strong&gt;，&lt;strong&gt;其视图不会同时删除&lt;/strong&gt;，只是失效。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;视图的删除仅仅指数据字典中删除视图的定义&lt;/strong&gt;。如果给出选项 CASCADE, 则由该视图带出的所有视图也同时被删除；一个视图被删除后，由该视图导出的其他视图也将失效 (并非删除）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个 UPDATE 语句只能对一个表的行进行更新。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在 CREATE TABLE 语句中必须给出所创建的表中的每一个列的列名，同时需要指明每个属性的 (列名) 的 &amp;lt; 数据类型 &amp;gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库设计分为 6 个阶段：&lt;strong&gt;需求分析&lt;/strong&gt;、概念结构设计、&lt;strong&gt;逻辑结构设计&lt;/strong&gt;、&lt;strong&gt;物理结构设计&lt;/strong&gt;、&lt;strong&gt;数据库实施&lt;/strong&gt;、数据库运行和维护。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由关系模式设计不当所引起的问题：数据冗余、更新异常、插入异常、删除异常。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规范化理论最主要的应用是在数据库逻辑结构设计阶段，当 E-R 模型向关系的转换完成后，逐一检查转换得到的各个关系模式，如果某些关系模式未达到应用所要求的规范化程度，则进行关系模式的分解。规范化理论不但对于关系模型数据库的设计有重要意义，而且对于其他模型数据库的设计也有重要的指导意义。&lt;strong&gt;规范化理论给我们提供判断关系模式优劣的理论标准，在数据库设计中有时候会适当地降低规范化程度而追求查询性能。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据依赖是可以作为关系模式的取值的任何一个关系所必须满足的一种约束条件，是通过一个关系中各个元组的某些属性值之间的&lt;strong&gt;相等与否&lt;/strong&gt;体现出来的相互关系。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模式分解具有无损连接和函数依赖，两者相互独立。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自主安全性机制&lt;/strong&gt;，用于向用户授予特权，包括以指定的方式访问指定的数据文件、记录或字段的能力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;强制安全性机制&lt;/strong&gt;，用于对多级安全性进行控制，这一机制&lt;strong&gt;基于角色的概念&lt;/strong&gt;来强制执行安全性策略和权限。&lt;/p&gt;
&lt;h1 id=&#34;操作系统原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#操作系统原理&#34;&gt;#&lt;/a&gt; 操作系统原理&lt;/h1&gt;
&lt;h2 id=&#34;单选题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#单选题&#34;&gt;#&lt;/a&gt; 单选题&lt;/h2&gt;
&lt;p&gt;操作系统体系结构有三种类型：整体式结构、层次式结构和微内核结构。&lt;/p&gt;
&lt;p&gt;批处理就是将作业按照它们的性质分组，然后再成组地提交给计算机系统，由计算机自动完成后再输出结果，从而减少作业建立和结束过程中的时间浪费。&lt;strong&gt;其缺点是无交互性&lt;/strong&gt;，用户一旦提交作业就失去了对其运行的控制能力，而且是批处理的，作业周转时间长，用户使用不方便。&lt;/p&gt;
&lt;p&gt;引入中断技术可以使计算机的运行效率得到提高，&lt;strong&gt;中断优先级&lt;/strong&gt;对中断响应顺序产生影响。&lt;/p&gt;
&lt;p&gt;操作系统提供给用户用于应用程序编程的唯一接口是&lt;strong&gt;系统调用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;线程操作 pthread_join 的含义是&lt;strong&gt;等待一个特定的线程退出&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;异步环境下的一组并发的进程因直接制约而互相发送消息、 进行相互合作、相互等待，使得各进程按一定的速度执行的过程称为进程间的同步。 机票、足球和复印机都是公共资源，都会导致竞争，存在竞争关系。&lt;strong&gt;汽车装配流水线上的各道工序的活动&lt;/strong&gt;过程是上一道工序输出是下一道工序的输入，所以只存在同步关系。&lt;/p&gt;
&lt;p&gt;由于 mutex 的初值为 1, 说明同一时刻只允许一个进程进入临界区，又有 k 个进程在 mutex 的等待队列中，所以当前需要访问临界区的进程有 k+1 个，每个进程访问 mutex 时，mutex 的值都将减 1，所以此时的 mutex 的值为 **-k**。&lt;/p&gt;
&lt;p&gt;在存储管理方案中，&lt;strong&gt;虚拟页式&lt;/strong&gt;允许动态扩充内存内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIFO&lt;/strong&gt; 有可能产生 Belady 异常现象。&lt;/p&gt;
&lt;p&gt;文件的存取方式依赖于&lt;strong&gt;文件的物理结构&lt;/strong&gt;和&lt;strong&gt;存放文件的设备的物理特性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;使用文件前要先打开文件，在成功执行打开文件系统调用后，系统会返回给用户一个&lt;strong&gt;文件描述符&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对磁盘的访问时间分为三部分：寻道时间、旋转时间和传输时间。其中，&lt;strong&gt;寻道时间&lt;/strong&gt;最能影响磁盘读写的性能。&lt;/p&gt;
&lt;p&gt;设备表的作用是&lt;strong&gt;建立逻辑设备与物理设备之间的对应关系&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备缓冲技术&lt;/strong&gt;是为了协调吞吐速度相差很大的设备之间数据传送的工作。&lt;/p&gt;
&lt;p&gt;死锁产生的原因有: 1. 竞争资源弓 | 起进程死锁；2.&lt;strong&gt; 进程推进顺序不当引起死锁&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;死锁状态一定是不安全状态&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;进程控制块的基本内容有:&lt;strong&gt; 进程标识符&lt;/strong&gt;、&lt;strong&gt;进程当前状态&lt;/strong&gt;、进程相应的程序和数据地址、进程优先级、CPU 现场保护区、进程同步与通信机制、进程所在队列 PCB 的链接字、与进程有关的其他信息 (如&lt;strong&gt;代码段指针&lt;/strong&gt;)。&lt;/p&gt;
&lt;p&gt;进程从运行状态转换为就绪状态的可能原因有：&lt;strong&gt;进程创建完成&lt;/strong&gt;、&lt;strong&gt;时间片用完&lt;/strong&gt;和&lt;strong&gt;被调度程序抢占处理机&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;full 信息量初始值为 0，&lt;strong&gt;mutex 初始值为 1&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;地址映射一般是由硬件完成的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;快表存放在高速缓存中，&lt;strong&gt;快表的内容是页表的一部分&lt;/strong&gt;，并非全集。&lt;/p&gt;
&lt;p&gt;文件控制块 (FCB) 一般应包括下列的内容:&lt;strong&gt; 文件名&lt;/strong&gt;，&lt;strong&gt; 文件号&lt;/strong&gt;，用户名，&lt;strong&gt;磁盘块起始地址&lt;/strong&gt;（&lt;strong&gt;文件地址&lt;/strong&gt;），&lt;strong&gt;文件长度&lt;/strong&gt;，文件类型，文件属性，共享计数，&lt;strong&gt;文件建立日期&lt;/strong&gt;，文件物理益等等信息。&lt;/p&gt;
&lt;p&gt;可以提高文件系统的性能的有：&lt;strong&gt;块高速缓存&lt;/strong&gt;、&lt;strong&gt;磁盘驱动调度和目录项分解法&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;设备与 CPU 之间数据传送和控制方式有&lt;strong&gt;程序直接控制方式&lt;/strong&gt;、&lt;strong&gt;中断控制方式&lt;/strong&gt;、&lt;strong&gt;DMA 方式&lt;/strong&gt;和&lt;strong&gt;通道控制方式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;解除死锁的方法有:&lt;strong&gt; 剥夺某些进程所占有的资源&lt;/strong&gt;、&lt;strong&gt;撤消某些进程&lt;/strong&gt;和&lt;strong&gt;重新启动系统&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;现代操作系统最基本的特征：&lt;strong&gt;并发性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;若一个单核处理机的系统中有多个进程存在，则这些进程是&lt;strong&gt;并发运行的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在组成计算机系统的各类资源中，主要包含有硬件部件以及&lt;strong&gt;代码和数据&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;从计算机安全保护角度来看，操作系统的主要作用是提供&lt;strong&gt;第一道安全防线&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;操作系统作为系统软件，位于软件系统的&lt;strong&gt;硬件之上，支撑软件之下&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;计算机系统中，操作系统作为系统软件集中了&lt;strong&gt;资源管理和控制程序执行&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;操作系统能够 “合理 “地组织计算机工作流程、控制程序的执行，其中 “合理” 是指&lt;strong&gt;公平对待不同用户程序，不发生 “死锁” 和 “饥饿” 的现象&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;随机性是操作系统的特征之一。下列描述的四种现象中，&lt;strong&gt;操作系统内核进行进程切换&lt;/strong&gt;具有 “随机性”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在单处理器环境下，两个程序交替在 CPU 上运行&lt;/strong&gt;具有 “并发性”。&lt;/p&gt;
&lt;p&gt;操作系统的任务之一是组织和管理计算机系统中的硬件及软件资源，为此在操作系统内部设计了各种数据结构。这些数据结构在操作系统运行中&lt;strong&gt;可以由系统动态更新&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;操作系统的任务之一是向用户提供各种服务功能。&lt;strong&gt;向开发人员提供高效的编程接口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;实时操作系统的主要设计目标是&lt;strong&gt;在严格时间范围内对外部请求做出反应&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;计算机系统包括硬件和软件，&lt;strong&gt;数据库软件&lt;/strong&gt;是软件系统中的&lt;strong&gt;支撑软件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;操作系统的功能之一是管理资源，&lt;strong&gt;在操作系统内部设计不同类型的表格&lt;/strong&gt;是用于资源管理的。&lt;/p&gt;
&lt;p&gt;在不同类型的操作系统中，批处理操作系统的缺点是&lt;strong&gt;缺乏交互性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;除了进程线程管理、存储管理、文件系统外，&lt;strong&gt;设备管理&lt;/strong&gt;是属于操作系统的必要组成部分。&lt;/p&gt;
&lt;p&gt;下列关于操作系统的叙述中，正确的是&lt;strong&gt;操作系统作为系统软件，为用户提供了高效使用计算机的接口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;共享性是操作系统的特征之一，&lt;strong&gt;可重入代码&lt;/strong&gt;可以同时共享。&lt;/p&gt;
&lt;p&gt;下列&lt;strong&gt;中央处理器、存储器和打印机&lt;/strong&gt;在操作系统控制下可以 “互斥共享 “。&lt;/p&gt;
&lt;p&gt;共享性是操作系统的特征之一。下列描述的四种资源中，&lt;strong&gt;系统中的扫描仪&lt;/strong&gt;不具有 “同时共享”。&lt;/p&gt;
&lt;p&gt;** 驻留位（A）** 不包含在程序状态字 (PSW) 中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;管态或目态&lt;/strong&gt;表示了处理器运行时的状态。&lt;/p&gt;
&lt;p&gt;处理器的状态由系统态到用户态的转换是通过&lt;strong&gt;修改程序状态字&lt;/strong&gt;实现的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;处理器处于管态时可以执行全部指令&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;共享性是指操作系统程序与多个用户程序共用系统中的各种资源。能够控制实现共享性的是&lt;strong&gt;操作系统&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;并发性是操作系统的特征之一。&lt;strong&gt;在单处理器上，一个进程运行除法运算，另一个进程利用 DMA 读写内存&lt;/strong&gt;不具有 “并发性”&lt;/p&gt;
&lt;p&gt;操作系统需要处理器从内核态转为用户态时，采用的是&lt;strong&gt;修改程序状态字&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;操作系统为用户提供了多种使用接口，包括&lt;strong&gt;图标和菜单、命令行、系统调用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;下列英文名称或縮写中，&lt;strong&gt;SNMP、Eclipse&lt;/strong&gt; 不是操作系统的名称。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;批处理、交互式、实时、分布式&lt;/strong&gt;是指某一种操作系统的类型。&lt;/p&gt;
&lt;p&gt;当前 Android 操作系统应用广泛，它具有&lt;strong&gt;移动应用、支持网络&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;研究操作系统的观点有多种，它们分别是&lt;strong&gt;软件的观点、资源管理的观点、进程的观点、虚拟机的观点、服务提供者的观点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;个人计算机操作系统、网络操作系统、分布式操作系统、嵌入式操作系统&lt;/strong&gt;是典型的操作系统类型。&lt;/p&gt;
&lt;p&gt;微内核 (客户 / 服务器) 结构的操作系统具有下列哪些优点。&lt;strong&gt;高可靠性、高灵活性、适合分布式处理&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分时操作系统的特点是&lt;strong&gt;多个用户在线同时使用计算机、便于调试程序、能够对用户输入的信息及时响应、用户使用计算机时感觉不到计算机同时在为别人服务&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分布式操作系统的特点是&lt;strong&gt;系统内所有主机使用同一个操作系统、系统内资源深度共享、用户无需了解系统内本地或异地主机的差异，具有透明性、系统内各主机处于同等地位，不分主次、系统具有较高的可靠性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为进程分派 CPU、提供加锁和解锁原语、管理进程的数据结构、完成进程上下文切换&lt;/strong&gt;属于处理器管理范畴。&lt;/p&gt;
&lt;p&gt;实时操作系统的特点是&lt;strong&gt;具有较高的可靠性、在严格的时间范围内，实时响应用户的请求、具有较好的过载防护能力&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为用户程序提供系统调用接口、提供缓冲技术、管理通道、网卡等相关的数据结构、提供虚拟设备技术&lt;/strong&gt;属于设备管理和用户接口范畴。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;系统态、用户态&lt;/strong&gt;刻画的是 CPU 的状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主存储器、I/O 控制器、文件、键盘和鼠标&lt;/strong&gt;属于操作系统管理的系统资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;调度程序代码、PCB 表、I/O 设备、磁盘、时钟&lt;/strong&gt;属于操作系统管理的系统资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I/O 控制器、CPU、打印机、网卡、系统注册表&lt;/strong&gt;属于操作系统管理的系统资源&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺乏独立性、并发性差&lt;/strong&gt;是整体式操作系统结构的主要缺点。&lt;/p&gt;
&lt;p&gt;对于交互式系统，其调度算法的设计目标是&lt;strong&gt;较快的响应时间、较均衡的性能&lt;/strong&gt;。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://chendouxing.github.io/2023/03/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7%E8%80%83%E8%AF%95/</guid>
            <title>计算机三级填空题</title>
            <link>https://chendouxing.github.io/2023/03/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7%E8%80%83%E8%AF%95/</link>
            <category>计算机等级考试</category>
            <pubDate>Wed, 29 Mar 2023 09:48:10 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;IDEFO 需求建模方法由箭头和 31 矩形框两种元素构成。&lt;/p&gt;
&lt;p&gt;从安全性角度考虑，防火墙技术是用来保证数据库应用系统的 32 网络环境安全的。&lt;/p&gt;
&lt;p&gt;在 UML 的状态机图中，状态之间的转移是由 33 事件驱动的。&lt;/p&gt;
&lt;p&gt;在一个 SELECT 语句中，GROUP BY 子句的逻辑执行顺序在 ORDER BY 子句之 34 前&lt;/p&gt;
&lt;p&gt;在 T-SQL 语言中，如果要将 T1 表中的全部数据复制到 T2 表中，T2 表目前还不存在，可使用语句:&lt;/p&gt;
&lt;p&gt;SELECT * 35 INTO T2 FROM T1&lt;/p&gt;
&lt;p&gt;设有表 Student (Sno,Sname)、SC (Sno,Cno,Grade), 现要查询没选 C01 课程的学生姓名，请补全下列语句:&lt;/p&gt;
&lt;p&gt;SELECT Sname FROM Student WHERE NOT 36 EXISTS .(SELECT * FROM SC WHERE Cno = ‘C01’&lt;/p&gt;
&lt;p&gt;AND Student.Sno = SC.Sno )&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，若要提取游标 cur1 当前行指针所指的前一行数据，使用的选项是: FETCH 37 PRIOR FROM cur1&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，若要删除 U1 架构，使用的语句是：38 DROP SCHEMA U1&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，有两种身份验证模式，一种是混合身份验证模式，另 - 种是 39 Windows 身份验证模式。&lt;/p&gt;
&lt;p&gt;40 物化视图是包含查询结果的数据库对象，数据不是在视图使用时才读取而是预先计算的。&lt;/p&gt;
&lt;p&gt;为提高数据库性能，在销售单据表中增加 “总价” 字段 (由表中 “单价 &amp;quot; x “数量” 计算而来) , 此种数据库优化方法被称为增加 ( 41 派生冗余列方法。&lt;/p&gt;
&lt;p&gt;在数据库动态转储机制中，一 般需要使用 ( 42 日志文件才能将数据库恢复到某 - 时刻的正确状态。&lt;/p&gt;
&lt;p&gt;分布式数据库系统的恢复控制采用的最典型策略是基于 43 两阶段的提交协议。&lt;/p&gt;
&lt;p&gt;时间序列分析也可以称为数据演变分析，它能描述行为随 44 时间变化的对象的规律或趋势，并对其进行建模。&lt;/p&gt;
&lt;p&gt;在关联规则挖掘中，关联规则的成立与否一般用 45 支持度和置信度两个指标进行描述。&lt;/p&gt;
&lt;p&gt;数据库完整性约束条件的作用对象分为列、元组和 31 关系三种级别。&lt;/p&gt;
&lt;p&gt;建立在主码属性上的索引称作 32 主索引。&lt;/p&gt;
&lt;p&gt;在 UML 图中，描述系统中硬件和软件的物理配置情况和系统体系结构的图称为 33 部署图。&lt;/p&gt;
&lt;p&gt;在一个 SELECT 语句中，HAVING 子句的逻辑执行顺序在 WHERE 子句之 34 后。&lt;/p&gt;
&lt;p&gt;在 T-SQL 语言中，如果要将 T1 表中的全部数据复制到 T2 表中，T2 表已存在，可使用语句: .&lt;/p&gt;
&lt;p&gt;35 INSERT INTO T2 SELECT * FROM T1&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，设要在销售表上定义一个更新操作的后触发器。请补全下列语句: .&lt;/p&gt;
&lt;p&gt;CREATE TRIGGER tri sales ON 销售表 36 FOR  UPDATE … …&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，判断游标提取状态的全局变量是 37 @@FETCH_ STATUS&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，若要将 DB1 数据库完整备份到 BK 设备上，请补全下列语句:&lt;/p&gt;
&lt;p&gt;38 BACKUP DATABASE DB1 TO BK .&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，系统管理员角色是 39 sysadmin&lt;/p&gt;
&lt;p&gt;在对表进行 40 垂直分割后，如果需要查询原表的全部数据，需要使用 join 操作。&lt;/p&gt;
&lt;p&gt;将经常一 起使用的多个表中的数据行按照其公共列值存储在一 起，这种表存储方法为 41 聚集&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中， 使用 T-SQL 语句进行数据库备份操作， 需要使用 42 DIFFERENTIAL 关键词指定该备份为差异备份。&lt;/p&gt;
&lt;p&gt;在分布式数据库中，将某一关系从行 (元组) 的角度依据定条件划分为不同的片断，这种分片方法称为 43 水平分片法。&lt;/p&gt;
&lt;p&gt;在数据仓库中，元数据 - 般分成技术元数据和业务元数据。&lt;/p&gt;
&lt;p&gt;在数据仓库的导出数据或物化视图 (实视图) 的维护策略中，只在用户查询时发现数据已经过期才进行更新的策略称为延时维护策略。&lt;/p&gt;
&lt;p&gt;如果数据文件中的每个查找码值在索引文件中都对应一个索引记录，则称该索引为 31 稠密索引。&lt;/p&gt;
&lt;p&gt;在三层浏览器 / 服务器体系结构的数据库应用系统中，触发器是在数据库服务器上执行的。&lt;/p&gt;
&lt;p&gt;UML 图中，用于表达系统中不同的包、命名空间或不同的项目间彼此关系的图称为 33 包图。&lt;/p&gt;
&lt;p&gt;在 SELECT 语句中，用于进行分组的子句是 34 GROUP BY&lt;/p&gt;
&lt;p&gt;SQL Server 2008 提供了 4 个排名函数，其中 ( 35 RANK 函数返回结果集中每行数据在每个分区内的排名，并且每个分区内的排名从 1 开始，但排名中间数值可能有间断。&lt;/p&gt;
&lt;p&gt;在数据库调优过程中，在 &amp;quot; 销售单据明细表” 中将” 单价 * 数量” 计算结果保存到” 总价” 列中，以减少查询过程中的计算量，此种调优方法被称为增加 40 冗余方法。&lt;/p&gt;
&lt;p&gt;在数据库恢复过程中，检查点技术大幅度减少了数据库恢复时执行的 42 日志恢复操作数量。&lt;/p&gt;
&lt;p&gt;分布式数据库中，位置独立性、数据分片独立性和数据复制独立性形成了分布式数据库系统中的 43 分布透明性。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 的 LIKE 子句中，可以匹配 0 到多个字符的通配符是 34 %&lt;/p&gt;
&lt;p&gt;SQL Server 2008 提供了 4 个排名函数，其中 35 DENSE _RANK 函数返回结果集中每行数据在每个分区内的排名，并且每个分区内行的排名从 1 开始，排名可重复不间断。&lt;/p&gt;
&lt;p&gt;在数据库调优过程中，在 “学生信息表” 中增加 “所在系名”，以减少查询过程中的表连接次数，此种调优方法被称为增加 40 冗余列方法。&lt;/p&gt;
&lt;p&gt;在各种并行数据库系统结构中， 43 层次结构综合了共享内存、共享磁盘和无共享结构的特点，将结构分成顶层和底层两层，顶层是无共享结构，底层是共享内存或共享磁盘结构。&lt;/p&gt;
&lt;p&gt;设在 SQL Server 2008 中， 要在 T1 表的 C1 列上建立一个按降序排序的非聚集索引。请补全下列语句:&lt;/p&gt;
&lt;p&gt;CREATE INDEX idx t1 ON T1( 38 C1 DESC)&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，若要删除 U1 登录账户，请补全下列语句:&lt;/p&gt;
&lt;p&gt;DROP 39 LOGIN U1&lt;/p&gt;
&lt;p&gt;在数据仓库环境中，数据的 44 粒度设计是一 种重要的设计问题， 它会影响到数据仓库中数据量以及系统能回答的查询的类型。&lt;/p&gt;
&lt;p&gt;在企业数据仓库架构中，操作型数据存储 ODS - 般情况下主要用来支持即时 OLAP 和全局型 45 OLTP 两类应用。&lt;/p&gt;
&lt;p&gt;在三层浏览器 / 服务器体系结构的数据库应用系统中，Web 浏览器实现的是 32 表示层的功能。&lt;/p&gt;
&lt;p&gt;用于描述系统、用例和程序模块中逻辑流程执行次序的 UML 图称为 33 活动图。&lt;/p&gt;
&lt;p&gt;在数据库并发控制中，锁的粒度越 41 大，事务并发执行程度就越小，数据库系统开销也越小。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，数据库镜像分为高 42 可用操作模式、高保护操作模式和高性能操作模式。&lt;/p&gt;
&lt;p&gt;在数据仓库环境中，关于 44 数据的数据被称为元数据。&lt;/p&gt;
&lt;p&gt;答疑: [解析] 如果数据文件中的每个查找码值在索引文件中都对应一个索引记录，则该索引称为稠密索引；如果只是一部分查找码的值有对应的索引记录， 则该索引称为稀疏索引&lt;/p&gt;
&lt;p&gt;定义架构的 SQL 语句为 CREATE SCHEMA, 其语法格式为 CREATE SCHEMA [&amp;lt;架构名&amp;gt;] AUTHORIZATION &amp;lt; 用户名 &amp;gt;。&lt;/p&gt;
&lt;p&gt;设在 SQL Server 中， 要启用被禁用的 User1 登录账户。请补全下列语句:&lt;/p&gt;
&lt;p&gt;39 ALTER LOGIN User1 ENABLE&lt;/p&gt;
&lt;p&gt;某超市管理系统运行过程中出现异常，导致已经提交的事务对数据库的更新结果未能正确写入磁盘，此故障破坏了事务的 40 一致性。&lt;/p&gt;
&lt;p&gt;在 UML 中，用于描述系统内对象之间的消息发送和接收序列的称为 33 顺序图。&lt;/p&gt;
&lt;p&gt;当数据库系统中存在死锁时，通常的解决方案是选择 - 个或几个死锁事务，40 回滚这些事务。&lt;/p&gt;
&lt;p&gt;分布式数据库是物理上分散、逻辑上 43 集中的数据库系统。&lt;/p&gt;
&lt;p&gt;如果数据文件中数据记录的排列顺序和索引文件中对应索引码的排列顺序 - 致，则称这种索引为 32 聚集索引。&lt;/p&gt;
&lt;p&gt;为经常作为查询条件的列建立 41 索引的调优方法是典型的以空间换时间的调优方法。&lt;/p&gt;
&lt;p&gt;在分布式数据库查询中，导致数据传输量大的主要原因是数据间的连接操作和 43 并操作。&lt;/p&gt;
&lt;p&gt;图主要用于表达问题领域的概念模型，类图中除了表达抽象概念的名称外，还需要表达抽象概念的属性和 33 方法。&lt;/p&gt;
&lt;p&gt;某系统运行过程中异常，已提交事务所影响的数据未能正确写入磁盘且无法恢复，此故障破坏了事务的 40 持久性。&lt;/p&gt;
&lt;p&gt;数据仓库与大数据平台的前端需要有 ETL 工具，其中的 E 是指 45 抽取.&lt;/p&gt;
&lt;p&gt;在事务概要设计中，用 31 read 原语来表示应用层的 Select 操作。&lt;/p&gt;
&lt;p&gt;UML 中的通信图显示的是系统内对象之间的 33 关系， 并不强调交互的顺序。&lt;/p&gt;
&lt;p&gt;执行存储过程需要使用 exec 或 execute 关键词。&lt;/p&gt;
&lt;p&gt;RETURNS 关键词后面是 TABLE&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，用户定义的角色属于 39 数据库级别的角色。&lt;/p&gt;
&lt;p&gt;SQL Server 2008 支持的备份类型包括数据库备份、42 文件备份以及 事务日志备份几种方式。&lt;/p&gt;
&lt;p&gt;分片透明性是最高级别的透明性，位于全局概念模式与 43 分片模式之间。&lt;/p&gt;
&lt;p&gt;DBAS 生命周期中，规划与分析的主要工作内容包括系统规划与定义、项目规划和 31 可行性分析&lt;/p&gt;
&lt;p&gt;在 UML 中，包图是用来表示包与包之间的关系的 33 类图。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用约束可以保证数据库中数据的正确性，其中 38 UNIQUE 约束允许出现空值但不允许出现重复值。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，设 log1 是 SQL Server 身份验证模式的数据库服务器登录帐户。现要授予 log 1 具有创建数据库的权限，请补全下列语句:&lt;/p&gt;
&lt;p&gt;EXEC sp_ addsrvrolemember ‘log1’,&#39;dbcreator&lt;/p&gt;
&lt;p&gt;设用 UML 设计某数据库应用系统，设计人员规划了一组应用程序集，该集合由动态链接库和可执行程序构成。为了展现这些应用程序集间的组织和依赖关系，以对源代码、可&lt;/p&gt;
&lt;p&gt;执行程序的发布等进行系统建模，应采用的 UML 图是 ( 33 组件图。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，计算两个日期之差的函数是 (36 datediff ()。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，能够出现在 SELECT 语句目标列中的用户自定义函数是 35 标量函数。&lt;/p&gt;
&lt;p&gt;在分布式数据库中，使用 32 分配模式来描述各片段到物理存放场地的映像。&lt;/p&gt;
&lt;p&gt;在 UML 中，33 聚集是一种特殊形式的关联，它表示类之间的关系是整体与部分的关系。&lt;/p&gt;
&lt;p&gt;在衡量数据库应用系统的性能指标中，( 34 系统吞吐量指的是系统在单位时间内可以完成的数据库事务数量。&lt;/p&gt;
&lt;p&gt;在并行数据库中，最适合整表扫描操作的数据划分方法是 36 轮转法&lt;/p&gt;
&lt;p&gt;Google 的云数据库是一个分布式的结构化数据存储系统，称作 38 Big table&lt;/p&gt;
&lt;p&gt;在数据库事务概要设计阶段，使用 read 和 write 原语来表达存取操作。&lt;/p&gt;
&lt;p&gt;数据库在运行过程中，由于突然停电等情况，导致系统停止运行的故障称为系统故障。&lt;/p&gt;
&lt;p&gt;分布式数据库系统由局部数据库管理系统、全局数据库管理系统、全局数据字典、通信管理四部分组成。&lt;/p&gt;
&lt;p&gt;在数据库性能优化中，建立物化视图和聚集 (Cluster) 属于存储优化方法。&lt;/p&gt;
&lt;p&gt;数据库维护过程中，管理员应定期对数据库进行重组，即对数据库进行整理回收碎块，重新安排数据的存储，重建索引等操作。&lt;/p&gt;
&lt;p&gt;局部数据模型透明性处于分配模式与局部概念模式之间，它使用户在编写应用程序时不但要了解全局数据的分片情况，还要了解各片段的副本复制情况及各片段和它们副本的场地位置分配情况，但是不需要了解各场地上数据库的数据模型。&lt;/p&gt;
&lt;p&gt;在分布式数据库的数据分配中，若全局数据存在多个副本，在每个物理场地中都保存一个完整的数据副本，本策略属于全复制式。&lt;/p&gt;
&lt;p&gt;在 UML 提供的图中，活动图主要用于描述系统、用例和程序模块中逻辑流程的先后或并行执行次序。&lt;/p&gt;
&lt;p&gt;在数据库操作过程中，因发生了违反完整性约束而导致事务中止的故障属于非预期的事务内部故障。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，请补全下列声明游标 MyYB 的语句：DECLARE MyYB cursor FOR SELECT * FROM T1&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，事务日志备份仅可用在完整恢复模式和大容量日志恢复模式中。&lt;/p&gt;
&lt;p&gt;从安全性角度考虑，防火墙技术是用来保证数据库应用系统的网络环境安全的。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，若要提取游标 cur1 当前行指针所指的前一行数据，使用的选项是: FETCH PRIOR FROM cur1&lt;/p&gt;
&lt;p&gt;在关联规则挖掘中，关联规则的成立与否一般用支持度和置信度两个指标进行描述。&lt;/p&gt;
&lt;p&gt;在 UML 图中，描述系统中硬件和软件的物理配置情况和系统体系结构的图称为部署图。&lt;/p&gt;
&lt;p&gt;将经常一起使用的多个表中的数据行按照其公共列值存储在一起，这种表存储方法为聚集。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，使用 T SQL 语句进行数据库备份操作，需要使用 DIFFERENTIAL 关键词指定该备份为差异备份。&lt;/p&gt;
&lt;p&gt;在数据仓库的导出数据或物化视图 (实视图) 的维护策略中，只在用户查询时发现数据已经过期才进行更新的策略称延时维护策略。&lt;/p&gt;
&lt;p&gt;SQL Server 2008 提供了 4 个排名函数，其中 RANK 函数返回结果集中每行数据在每个分区内的排名，組每个分区内的排名从 1 开始，但排名中间数值可能有间断。&lt;/p&gt;
&lt;p&gt;SQL Server 2008 提供了 4 个排名函数，其中 DENSE _RANK 函数返回结果集中每行数据在每个分区内的排名，并且每个分区内行的排名从 1 开始，排名可重复且不间断。&lt;/p&gt;
&lt;p&gt;在数据库恢复过程中，检查点技术大幅度减少了数据库恢复时执行的日志恢复操作数量。&lt;/p&gt;
&lt;p&gt;分布式数据库中，位置独立性、数据分片独立性和数据复制独立性形成了分布式数据库系统中的分布透明性。&lt;/p&gt;
&lt;p&gt;对一个数据集的数据进行分组，使得每一组内的数据尽可能相似而不同组间的数据尽可能的不同，这样数据挖掘方法称为聚类算法。&lt;/p&gt;
&lt;p&gt;SQL Server 2008 中有 3 种类型的事务日志备份，对可能损坏的数据库进行日志备份的方式是尾部日志备份。&lt;/p&gt;
&lt;p&gt;在数据仓库环境中，数据的粒度设计是一 种重 要的设计问题，它会影响到数据仓库中数据量以及系统能回答的查询的类型。&lt;/p&gt;
&lt;p&gt;在 SQL Server 2008 中，数据库镜像分为高可用操作模式、高保护操作模式和高性能操作模式。&lt;/p&gt;
&lt;p&gt;并行数据库有多种体系结构，其中所有处理机通过网络共享 - 个公共的主存储器的结构称为 共享内存结构。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
