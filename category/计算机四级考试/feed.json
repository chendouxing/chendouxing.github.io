{
    "version": "https://jsonfeed.org/version/1",
    "title": "蟹堡王海星 • All posts by \"计算机四级考试\" category",
    "description": "花有重开日，人无再少年",
    "home_page_url": "https://chendouxing.github.io",
    "items": [
        {
            "id": "https://chendouxing.github.io/2023/08/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%9B%E7%BA%A7%E8%80%83%E8%AF%95/",
            "url": "https://chendouxing.github.io/2023/08/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%9B%E7%BA%A7%E8%80%83%E8%AF%95/",
            "title": "计算机四级考试",
            "date_published": "2023-08-24T06:39:06.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"数据库原理\"><a class=\"markdownIt-Anchor\" href=\"#数据库原理\">#</a> 数据库原理</h1>\n<p>分布式透明性（网络透明性）包含位置透明性和命名透明性；复制透明性使用户不知道副本的存在</p>\n<p>两阶段封锁协议保证可串行性</p>\n<p>保证事务原子性是 DBMS 的事务管理器中故障恢复机制的责任；保证事务的一致性是对该事务进行编码的应用程序员的责任；保证事务的隔离性是 DBMS 的事务管理器中并发控制部件的责任；保证事务的持久性是 DBMS 的事务管理器中故障恢复机制的责任。</p>\n<p>在分布式提交中，当一个事务更新在多个站点上的数据时，直到它确认每个站点上的事务都有结果且没有丢失时才能够提交。每个站点首先将事务执行的局部结果<strong>永久</strong>记录在本地站点磁盘的日志上。</p>\n<p>分布式系统的所有问题是<strong>内部的、实现级别的</strong></p>\n<p>分布式数据库系统中的<strong>数据分片</strong>是指<strong>对全局关系的分片</strong></p>\n<p><strong>可重构性：必须保证能够由一个全局关系的各个片段来重构该全局关系</strong></p>\n<p><strong>HTTP 协议的效率低</strong></p>\n<p>分布式计算系统不可能同时满足 CAP 原理（一致性，可用性和分区容忍性）</p>\n<p>ODMG 中对象可以用五个方面来描述：标识符、名称、生存期、结构和创建</p>\n<p>对象定义语言 ODL<strong> 独立于</strong>任何特定的编程语言（“ODL 是与 C++ 或 JAVA 等类似的一种编程语言” 该说法是错误的</p>\n<p>基本可用是指分布式系统在出现不可预知的故障时，允许损失部分可用性，但不等价于可用性不可用</p>\n<p>在主站点技术中，所有的识别副本<strong>都被保留</strong>在相同的站点上；所有的加锁和解锁请求<strong>都被传输</strong>在包含那个副本的站点上。</p>\n<p>分布式数据库系统的查询处理比集中式系统<strong>更复杂</strong>，分布式数据查询<strong>以减少传输的数据量为优化目标</strong></p>\n<p><strong>半连接操作不能交换</strong></p>\n<p>基于识别数据项副本的方法常用于<strong>分布式并发控制</strong></p>\n<p>NOSQL 的复制模型主要有主 - 从复制和主 - 主复制。主从复制模型需要一 个复制为主复制，<strong>所有的读和写操作都必须是对主复制的</strong>，然后再复制到其他的从节点。</p>\n<p><strong>一个典型的对象 - 关系数据库中的表不满足第一范式的要求</strong>。</p>\n<p>三层 B/S 体系结构分别为表示层、应用层和数据库服务器层。应用层也称为业务逻辑层。<strong>当使用 Web 界面时，表示层一般通过 HTTP 协议 与应用层进行通信</strong>。</p>\n<p>典型的大对象（<strong>位图图像和长文本串</strong>）<strong>被称为二级制大对象 BLOB</strong>，一般是非结构化的。</p>\n<p><strong>双钥加密体制中的加密秘钥和解密秘钥是不相同的</strong>。</p>\n<p>DBMS 不能直接处理基于非结构复杂对象的值的选择条件及其他操作。</p>\n<p>很多 NOSQL 系统不支持 Join（连接）操作，Join 操作需要在应用程序中实现。</p>\n<p>基于关系数据库系统的、以数据处理为主的传统的数据库应用具有以下共同特点：结构统一，面向记录，数据项小和原子字段。</p>\n<p><strong>三种最基本的构造器是：原子、结构或元组、以及汇集。</strong></p>\n<p>数据加密标准<strong> DES</strong> 的密钥长度是<strong> 56</strong> 位数字，数据高级加密标准<strong> AES</strong> 的密钥长度可以是<strong> 128、192 或 256</strong> 位数字。</p>\n<p><strong>BASE 指的是基本可用、软状态和最终一致性</strong>。</p>\n<p>很多 NOSQL 系统采用的是<strong>对对象的主码进行哈希或范围分区方法来提高访问数据的性能</strong>，NoSQL<strong> 支持无模式结构数据的存储和访问</strong>。</p>\n<p><strong>投票方法在站点间产生的信息通信量比识别副本方法产生的要高</strong>。</p>\n<p>以应用服务器为中心的软件结构是 Web 服务器和三层客户机服务器结合的成果。<strong>这种软件结构可分为四部分：客户机浏览器、Web 服务器、应用服务器、数据库服务器</strong>。</p>\n<p><strong>两阶段提交协议常用于处理分布式提交问题</strong>。</p>\n<p>常用的 B /S 结构软件开发模式:<strong> 以 Web 服务器为中心</strong>，<strong>以数据库服务器为中心</strong>和<strong>以应用服务器为中心</strong>。</p>\n<p><strong>星形性质：安全级别高的主体禁止写安全级别低的客体</strong>。</p>\n<p><strong>列存储数据库是按列存储数据</strong>的，这类系统按列将一张表分为列族 (一种<strong>垂直分片方法</strong>) , 每个列族存储在自己的文件中。</p>\n<p><strong>在投票方法中，不需要指定识别副本</strong>。</p>\n<p>主站点技术是一种识别数据项副本的并发控制方法；主站点技术中所有的识别副本都保留在同一站点上，<strong>尽管所有的锁都在主站点上存取，但数据项本身可以在它们所在的任何站点上存取</strong>，主站点技术的好处是它是集中式方案的简单扩展，因此不太复杂。</p>\n<p>关联规则，指的是同时满足最小支持度阈值和最小可信度阈值的规则。关联规则挖掘的总体性能由从项集中找出频繁项集的过程决定，常用的关联规则挖掘算法有 Aprior 算法、采样算法、分区算法等。<strong>一个频繁项集的超集可以是频繁项集，也可以不是</strong>。</p>\n<p><strong>大多数的 WEB 产品都是通过牺牲一致性来换取高可用性</strong>。</p>\n<p><strong>强一致性</strong>：对于关系型数据库，要求更新过的数据都能被后续的访问看到。</p>\n<p><strong>最终一致性</strong>：如果经过一段时间后，要求能访问到更新后的数据。</p>\n<p><strong>星形模型由一个事实表和每个维对应的维表组成</strong>。</p>\n<p><strong>SCRUD</strong> 操作分别指<strong> Search</strong>、Create、Read、Update、Delete。</p>\n<p>对于遵循维格式的数据，在<strong>多维矩阵（数据立方体）上的查询性能优于关系数据模型上的查询性能</strong>。</p>\n<p>对象查询语言 **（OQL）在设计时需要与编程语言紧密配合使用 **，<strong>OQL 语法与 SQL 的语法相似</strong>，只是增加了有关 ODMG 概念的特征。</p>\n<p>如果某个账户<strong>没有 CREATE TABLE 权限</strong>，那么这个账户就<strong>不能创建任何关系</strong>；矩阵中的每个位置<strong> M (i，j) 表示主体 i 有对象 j 的权限类型</strong> (读、写和更新)。</p>\n<p>在面向对象的程序设计语言中的对象称为<strong>临时对象</strong>，面向对象数据库永远在二级存储器中存储持久的对象。</p>\n<p>对象数据库 (ODB) 设计与关系数据库 (RDB) 设计之间最主要的区别是：</p>\n<ol>\n<li>如何处理联系；</li>\n<li>如何处理继承；</li>\n<li>在对象数据库设计中，有必要在设计时尽早指定操作。</li>\n</ol>\n<p>数字签名由一个符号串组成，<strong>签名对每个应用来说必须是不同的</strong>；<strong>公钥技术</strong>是创建此类特性的数字签名的<strong>最好办法</strong>。</p>\n<p>在多重继承的一般性规则中，只有<strong>当两个超类型中的同名函数不相同时才会发生二义性</strong>。</p>\n<p>每个对象标识符<strong> OID 只能被使用一次</strong>，OID 在对象生成时产生，<strong>在撤销对象时被注销</strong>，无法再赋予另外的对象。</p>\n<p>公钥加密模式 (或者公钥构架) 的组成部分：明文、加密算法、公钥、私钥、密文和解密算法。</p>\n<p>OLAP 服务器是位于客户与数据仓库服务器之间的一个服务器。关系 OLAP 服务器是 OLAP 服务器的一种实现，是扩充的关系型 DBMS，提供对多维数据库的支持。多维 OLAP 服务器是 OLAP 服务器的一种实现，它是一种特殊的服务器，直接支持多维数据的存储和操作。</p>\n<p><strong>NOSQL 系统常常使用水平扩展</strong>。</p>\n<p>在多维模式中，<strong>雪花模式比星形模式的数据冗余要低</strong>。</p>\n<p>数据库安全性的一般控制措施包括：<strong>访问控制</strong>、<strong>推理控制</strong>、<strong>流控制</strong>、<strong>数据加密</strong>。</p>\n<p><strong>NOSQL 数据库</strong>把文件的<strong>记录共享在多个节点</strong>上，以分担对数据的访问。</p>\n<p><strong>自主安全性机制的任务</strong>包含：</p>\n<ul>\n<li>权限授予（GRANT）</li>\n<li>权限收回（REVOKE）</li>\n<li>传播权限（GRANT OPTION）</li>\n</ul>\n<p>强制安全性机制用于对多级安全性进行控制，将用户和数据分为多个安全类别；<strong>基于角色的安全性机制是强制安全性机制的一个扩展</strong>。</p>\n<p>一般把 NOSQL 所采用的模型分为四类：键值、文档、列和图。</p>\n<p><strong>公钥加密使用两个独立的密钥</strong>。</p>\n<p><strong>CGI</strong> 作为一个独立的进程在 Web 服务器上运行，<strong>进程的创建和关闭都会严重消耗系统资源</strong>。</p>\n<p>API 与 CGI 两种编程接口均存在缺陷：</p>\n<ul>\n<li>用户界面受 HTML 语言的限制；</li>\n<li>Web 服务器负载过重；</li>\n<li>HTTP 协议的效率低。</li>\n</ul>\n<p><strong>行和数组类型构造器用于指定复杂类型，称为用户自定义类型</strong>；行类型对应于元组 (或结构) 构造器；数组类型对应指定汇集（集合）； SQL 提供了类似于类定义的构造，用户可以通过该构造创建命名的用户自定义类型。</p>\n<p><strong>统计数据库安全技术禁止对个体数据进行检索</strong>，只允许使用聚集类型的函数。</p>\n<p><strong>一个大项集 (频繁项集) 的子集必须是大项集</strong>，<strong>一个小项集</strong> (<strong>非频繁项集</strong>)<strong> 的超集是小项集</strong>。</p>\n<p>在关系授权和收回权限的<strong>自主访问控制技术，是一种 &quot;all-or-nothing&quot; 的方法</strong>，即一个用户要么拥有该特权，要么没有该特权。</p>\n<p><strong>水平扩展</strong>：增加分布式系统的节点数量；</p>\n<p><strong>垂直扩展</strong>：对系统的单个节点的能力进行扩充，比如增加存储能力和处理能力。</p>\n<h2 id=\"多选题\"><a class=\"markdownIt-Anchor\" href=\"#多选题\">#</a> 多选题</h2>\n<p>DBMS 提供模式数据定义语言（DDL）<strong>来描述逻辑模式</strong>。</p>\n<p>常用的<strong>逻辑数据模型</strong>包括基于记录的模型（<strong>层次模型、网状模型、关系模型</strong>）、<strong>面向对象模型和对象关系模型</strong>。</p>\n<p><strong>概念数据模型</strong>包括实体联系模型（E-R 模型）、扩充的实体联系模型（EER 模型）、<strong>面向对象模型</strong>、<strong>谓词模型</strong>。</p>\n<p><strong>面向对象模型可以是概念模型，也可以是逻辑模型</strong>。</p>\n<p>DBMS 还提供以下各方面数据控制功能：支持数据的多视图；支持数据共享和多用户事务处理；具有可控的冗余，<strong>提供数据库数据的安全性保护</strong>，限制非授权的访问；为程序对象提供持久性存储；提供高效查询处理的存储结构，<strong>支持高效的数据查询处理与优化</strong>；<strong>提供数据库的备份和恢复功能</strong>；<strong> 提供定义和确保数据库完整性检查</strong>；提供多用户界面；可缩短程序开发时间；<strong>并发控制</strong>。</p>\n<p><strong>数据库管理员的职责包括</strong>：<strong>确定数据库中的信息内容和结构</strong>；<strong>确定数据库的存储结构和存取策略</strong>；<strong> 定义数据的安全性要求和完整性约束</strong>；监控数据库的使用和运行；数据库的性能改进；定期对数据库进行重组或重构，以提高系统的性能。</p>\n<p><strong>关系模型是数学化模型</strong>，<strong>关系模型中数据的逻辑结构是一张二维表</strong>。</p>\n<h1 id=\"操作系统原理\"><a class=\"markdownIt-Anchor\" href=\"#操作系统原理\">#</a> 操作系统原理</h1>\n",
            "tags": [
                "计算机等级考试"
            ]
        }
    ]
}